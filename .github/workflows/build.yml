name: Build CMF 1 Kernel (Wildlife AnyKernel)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
        ref: main

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential cpio curl flex gcc g++ \
          git libssl-dev libncurses5-dev \
          zlib1g-dev libelf-dev dwarves \
          wget unzip xz-utils tar zstd \
          gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi zip

    - name: Download Neutron Clang (AntMan)
      run: |
        git clone --depth=1 https://github.com/Neutron-Toolchains/antman $HOME/antman
        $HOME/antman/antman -S=10032024

    - name: Build GKI kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export CC=clang
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_COMPAT=arm-linux-gnueabi-
        export PATH=$HOME/antman/toolchains/neutron-clang/bin:$PATH
        make O=out gki_defconfig
        make -j$(nproc) O=out

    - name: Prepare Wildlife AnyKernel3 zip
      run: |
        git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git
        mkdir -p AnyKernel3/kernel
        cp out/Image AnyKernel3/kernel/Image
        cp out/Image.gz-dtb AnyKernel3/kernel/Image.gz-dtb
        cp -r out/dtb/* AnyKernel3/kernel/dtb/
        cp out/.config AnyKernel3/kernel/.config

    - name: Create Wildlife-style ZIP
      run: |
        cd AnyKernel3
        zip -r ../cmf1-wildlife.zip ./*

    - name: Upload Wildlife AnyKernel zip
      uses: actions/upload-artifact@v4
      with:
        name: cmf1-wildlife-kernel
        path: cmf1-wildlife.zip
