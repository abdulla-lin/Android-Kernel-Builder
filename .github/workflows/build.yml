name: Build GKI Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
          ref: main
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full android-sdk-libsparse-utils erofs-utils \
              default-jdk gnupg flex bison gperf build-essential zip curl libc6-dev libncurses-dev libx11-dev libreadline-dev libgl1 libgl1-mesa-dev \
              python3-markdown libxml2-utils xsltproc libtinfo6 make repo cpio kmod openssl libelf-dev pahole libssl-dev libarchive-tools zstd --fix-missing
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
          sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb || true

      - name: Setup Prebuilts Clang r487747c
        run: |
          mkdir -p $GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86
          cd $GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86
          curl -LO https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android14-release/clang-r487747c.tar.gz
          tar -xvf clang-r487747c.tar.gz
          rm clang-r487747c.tar.gz

      - name: Set Environment Variables
        run: |
          echo "KERNEL_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
          echo "PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH" >> $GITHUB_ENV
          echo "HOSTCC=gcc" >> $GITHUB_ENV
          echo "HOSTCXX=g++" >> $GITHUB_ENV

      - name: Clean and Prepare Build
        run: |
          make mrproper
          make defconfig

      - name: Build Kernel and DTB
        run: |
          mkdir -p build out
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out HOSTCC=gcc HOSTCXX=g++ -j$(nproc)
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out CC=clang AR=llvm-ar NM=llvm-nm LD=ld.lld STRIP=llvm-strip OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf -j$(nproc)

      - name: Copy Kernel Image and DTB
        run: |
          cp $GITHUB_WORKSPACE/out/arch/arm64/boot/Image $GITHUB_WORKSPACE/build/
          cp $GITHUB_WORKSPACE/out/arch/arm64/boot/dts/qcom/YOUR_DEVICE.dtb $GITHUB_WORKSPACE/build/

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: build/
