name: Build GKI Kernel (Neutron Clang)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex git zip curl wget python3 python-is-python3 unzip build-essential cpio libssl-dev

    - name: Download Neutron Clang
      run: |
        mkdir -p ~/toolchains
        cd ~/toolchains
        wget https://github.com/Neutron-Clang/neutron-clang/releases/download/Neutron-19/Neutron-19.tar.zst
        tar --zstd -xf Neutron-19.tar.zst
        echo "PATH=$HOME/toolchains/Neutron-19/bin:$PATH" >> $GITHUB_ENV

    - name: Setup output dirs
      run: |
        mkdir -p out
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-

    - name: Make defconfig
      run: |
        make O=out ARCH=arm64 CC=clang gki_defconfig

    - name: Build kernel
      run: |
        make -j$(nproc) O=out \
          ARCH=arm64 \
          CC=clang \
          LLVM=1 \
          LLVM_IAS=1

    - name: Prepare AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel
        cd AnyKernel
        # Clean up
        rm -rf Image* dtb* dtbo* zImage
        # Copy kernel
        cp ../out/arch/arm64/boot/Image.gz-dtb ./ || true
        cp ../out/arch/arm64/boot/dtb.img ./ || true
        cp ../out/arch/arm64/boot/dtbo.img ./ || true
        # Zip
        zip -r9 Kernel-GKI.zip * -x .git README.md *placeholder

    - name: Upload kernel
      uses: actions/upload-artifact@v4
      with:
        name: GKI-Kernel
        path: AnyKernel/Kernel-GKI.zip
        
