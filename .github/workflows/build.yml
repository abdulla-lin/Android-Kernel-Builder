name: Build GKI Kernel + DTBO

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel and DTBO
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
          ref: main
          submodules: recursive

      - name: Cache Kernel Build Output
        uses: actions/cache@v3
        with:
          path: out
          key: kernel-out-${{ github.sha }}

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full android-sdk-libsparse-utils erofs-utils \
              default-jdk gnupg flex bison gperf build-essential zip curl libc6-dev libncurses-dev libx11-dev libreadline-dev libgl1 libgl1-mesa-dev \
              python3-markdown libxml2-utils xsltproc libtinfo6 make repo cpio kmod openssl libelf-dev pahole libssl-dev libarchive-tools zstd --fix-missing
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
          sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb || true

      - name: Set Environment Variables
        run: |
          echo "KERNEL_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "KBUILD_BUILD_USER=@ravindu644" >> $GITHUB_ENV
          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV
          echo "BUILD_CC=/usr/bin/clang" >> $GITHUB_ENV

      - name: Build Kernel
        run: |
          mkdir -p out build
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out gki_defconfig
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out -j$(nproc) \
            CC=/usr/bin/clang \
            AR=/usr/bin/llvm-ar \
            NM=/usr/bin/llvm-nm \
            LD=/usr/bin/ld.lld \
            STRIP=/usr/bin/llvm-strip \
            OBJCOPY=/usr/bin/llvm-objcopy \
            OBJDUMP=/usr/bin/llvm-objdump \
            READELF=/usr/bin/llvm-readelf \
            HOSTCC=/usr/bin/clang \
            HOSTCXX=/usr/bin/clang++
          cp $GITHUB_WORKSPACE/out/arch/arm64/boot/Image $GITHUB_WORKSPACE/build/

      - name: Build DTBO
        run: |
          mkdir -p dtbo
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out dtbo.img
          cp $GITHUB_WORKSPACE/out/arch/arm64/boot/dtbo.img $GITHUB_WORKSPACE/build/

      - name: Upload Kernel + DTBO Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-dtbo-build
          path: build/
