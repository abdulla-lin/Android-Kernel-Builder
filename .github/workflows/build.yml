name: Build GKI Kernel (AnyKernel3)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Kernel

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
          ref: main
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full \
              android-sdk-libsparse-utils erofs-utils default-jdk gnupg flex bison gperf build-essential zip curl libc6-dev libncurses-dev \
              libx11-dev libreadline-dev libgl1 libgl1-mesa-dev python3-markdown libxml2-utils xsltproc libtinfo6 make repo cpio kmod \
              openssl libelf-dev pahole libssl-dev libarchive-tools zstd --fix-missing
      - name: Setup Neutron-Clang Toolchain
        run: |
          mkdir -p $HOME/toolchains/neutron-clang
          cd $HOME/toolchains/neutron-clang
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
          chmod +x antman
          bash antman -S
      - name: Set Environment Variables
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "KBUILD_BUILD_USER=github" >> $GITHUB_ENV
          echo "KBUILD_BUILD_HOST=actions" >> $GITHUB_ENV
          echo "PATH=$HOME/toolchains/neutron-clang/bin:$PATH" >> $GITHUB_ENV
          echo "LOCALVERSION=-NeutronClang" >> $GITHUB_ENV
      - name: Configure Kernel
        run: |
          rm -rf out build
          mkdir -p out build
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out defconfig
          # Disable IPv6 multicast routing to skip mcast_snoop.o build error
          scripts/config --file out/.config -d IPV6_MROUTE
          scripts/config --file out/.config -d IPV6_MROUTE_MULTIPLE_TABLES
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out olddefconfig
      - name: Build Kernel (Image + dtb)
        run: |
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out -j$(nproc) \
            CC=clang \
            LD=ld.lld \
            AR=llvm-ar \
            NM=llvm-nm \
            STRIP=llvm-strip \
            OBJCOPY=llvm-objcopy \
            OBJDUMP=llvm-objdump \
            READELF=llvm-readelf \
            HOSTCC=clang \
            HOSTCXX=clang++ \
            HOSTLD=ld.lld
          cp out/arch/arm64/boot/Image build/
          cp out/arch/arm64/boot/dts/vendor/*.dtb build/ || true
      - name: Clone AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
          cp build/Image AnyKernel3/
          cp build/*.dtb AnyKernel3/ || true
          cd AnyKernel3 && zip -r9 ../Kernel-Flashable.zip *
      - name: Upload Raw Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raw-kernel-build
          path: build/*

      - name: Upload AnyKernel3 Zip
        uses: actions/upload-artifact@v4
        with:
          name: flashable-zip
          path: Kernel-Flashable.zip
