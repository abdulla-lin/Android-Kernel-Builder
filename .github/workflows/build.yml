name: Build CMF Phone 1 Kernel (Neutron Clang + AnyKernel3)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget curl build-essential bc bison flex \
          libssl-dev ccache python3 python3-pip zip unzip zstd

    - name: Setup Neutron Clang Toolchain
      run: |
        mkdir -p $HOME/toolchains/neutron-clang
        cd $HOME/toolchains/neutron-clang
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        chmod +x antman
        ./antman -S

    - name: Build Kernel
      run: |
        export PATH=$HOME/toolchains/neutron-clang/bin:$PATH
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_USER=github
        export KBUILD_BUILD_HOST=actions

        mkdir -p out

        # gki_defconfig
        make O=out gki_defconfig CC=clang

        # Build kernel + modules
        make -j$(nproc --all) O=out \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_COMPAT=arm-linux-gnueabi- \
          LLVM=1 LLVM_IAS=1

    - name: Prepare AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3.git
        cd AnyKernel3
        rm -rf .git

        # Copy kernel image
        cp ../out/arch/arm64/boot/Image.gz-dtb .

        # Create modules dir
        mkdir -p modules/vendor/lib/modules

        # Copy all built modules (.ko files) if any exist
        find ../out/ -name "*.ko" -exec cp {} modules/vendor/lib/modules/ \; || true

        # Zip the AnyKernel3 package
        zip -r9 ../CMF1-Kernel-AK3.zip *

    - name: Upload flashable zip
      uses: actions/upload-artifact@v4
      with:
        name: CMF1-Kernel-Flashable
        path: CMF1-Kernel-AK3.zip
        
