name: Build CMF Phone 1 Kernel (ThinLTO + O3 + Tuned)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
        ref: main

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential cpio curl flex git libssl-dev \
          libncurses5-dev zlib1g-dev libelf-dev dwarves \
          wget unzip xz-utils tar clang lld llvm binutils

    - name: Setup LLVM toolchain
      run: |
        export PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-17.0.2/bin:$PATH
        export ARCH=arm64
        export SUBARCH=arm64
        export CC=clang
        export LLVM=1
        export LLVM_IAS=1
        echo "PATH=$PATH" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "LLVM=1" >> $GITHUB_ENV
        echo "LLVM_IAS=1" >> $GITHUB_ENV

    - name: Configure Kernel (GKI + ThinLTO + O3 + Tunings)
      run: |
        # 1. Load GKI base config
        make O=out gki_defconfig

        # 2. Apply ThinLTO
        ./scripts/config --file out/.config \
          -e LTO_CLANG_THIN \
          -e THINLTO \
          -d LTO_NONE \
          -d LTO_CLANG_FULL

        # 3. Force O3 optimization
        ./scripts/config --file out/.config \
          -d CC_OPTIMIZE_FOR_PERFORMANCE \
          -e CC_OPTIMIZE_FOR_PERFORMANCE_O3

        # 4. Branding
        ./scripts/config --file out/.config \
          -d LOCALVERSION \
          -e LOCALVERSION_AUTO
        echo 'CONFIG_LOCALVERSION="-COMBACT-ThinLTO-O3-Tuned"' >> out/.config

        # 5. CPU scheduling & efficiency
        ./scripts/config --file out/.config \
          -e CPU_FREQ_GOV_SCHEDUTIL \
          -e CPU_FREQ_DEFAULT_GOV_SCHEDUTIL \
          -e UCLAMP_TASK \
          -e UCLAMP_TASK_GROUP \
          -e SCHED_AUTOGROUP

        # 6. Memory optimizations
        ./scripts/config --file out/.config \
          -e ZSWAP \
          -e ZSMALLOC \
          -e Z3FOLD \
          -e ZRAM_WRITEBACK \
          -e CRYPTO_LZ4 \
          -e CRYPTO_ZSTD

        # 7. Network improvements
        ./scripts/config --file out/.config \
          -e TCP_CONG_BBR \
          -e NET_SCH_FQ_CODEL \
          -e NET_SCH_FQ

        # 8. Devfreq governors & thermal userspace
        ./scripts/config --file out/.config \
          -e DEVFREQ_GOV_USERSPACE \
          -e DEVFREQ_GOV_SIMPLE_ONDEMAND \
          -e PM_DEVFREQ_EVENT \
          -e THERMAL_GOV_USER_SPACE

        # 9. I/O schedulers
        ./scripts/config --file out/.config \
          -e IOSCHED_BFQ \
          -e IOSCHED_KYBER

        # 10. Finalize dependencies
        make O=out olddefconfig

    - name: Build Kernel + DTB with O3
      run: |
        export KCFLAGS="-O3"
        make -j$(nproc) O=out CC=clang LLVM=1 LLVM_IAS=1 KCFLAGS="$KCFLAGS"
        make O=out dtbs CC=clang LLVM=1 LLVM_IAS=1 KCFLAGS="$KCFLAGS"

    - name: Prepare AnyKernel3
      run: |
        git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
        cp out/arch/arm64/boot/Image AnyKernel3/Image
        cp out/arch/arm64/boot/dts/**/*.dtb AnyKernel3/ || true
        if [ -f out/arch/arm64/boot/dtbo.img ]; then
          cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
        fi

    - name: Pack AnyKernel3 ZIP
      run: |
        cd AnyKernel3
        zip -r9 ../CMF_Kernel-6.1.68-ThinLTO-O3-Tuned.zip *

    - name: Upload AnyKernel3 ZIP
      uses: actions/upload-artifact@v4
      with:
        name: CMF_Kernel-6.1.68-ThinLTO-O3-Tuned
        path: CMF_Kernel-6.1.68-ThinLTO-O3-Tuned.zip
        
