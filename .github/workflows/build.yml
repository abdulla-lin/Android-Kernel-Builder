name: Build Android Kernel (Clang r487747c)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Clang r487747c
      run: |
        mkdir -p prebuilts/clang/host/linux-x86
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r487747c.tar.gz -O clang.tar.gz
        tar -xf clang.tar.gz -C prebuilts/clang/host/linux-x86
        export PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH
        echo "PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH" >> $GITHUB_ENV

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget curl build-essential bc bison flex libssl-dev libelf-dev python3

    - name: Configure kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        make O=out gki_defconfig

    - name: Build kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        make -j$(nproc) O=out

    - name: Upload compiled kernel Image.gz-dtb
      uses: actions/upload-artifact@v4
      with:
        name: kernel-image
        path: out/arch/arm64/boot/Image.gz-dtb
