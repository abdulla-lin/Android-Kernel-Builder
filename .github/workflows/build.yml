name: Build CMF Phone 1 Kernel + DTB (COMBACT Thin-LTO + SUSFS + KernelSU)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
        ref: main

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential cpio curl flex git libssl-dev \
          libncurses5-dev zlib1g-dev libelf-dev dwarves \
          wget unzip xz-utils tar clang lld llvm binutils

    - name: Setup LLVM toolchain
      run: |
        export PATH=$GITHUB_WORKSPACE/prebuilts/clang/host/linux-x86/clang-17.0.2/bin:$PATH
        export ARCH=arm64
        export SUBARCH=arm64
        export CC=clang
        export LLVM=1
        export LLVM_IAS=1
        export USE_CCACHE=0
        echo "PATH=$PATH" >> $GITHUB_ENV
        echo "ARCH=arm64" >> $GITHUB_ENV
        echo "SUBARCH=arm64" >> $GITHUB_ENV
        echo "CC=clang" >> $GITHUB_ENV
        echo "LLVM=1" >> $GITHUB_ENV
        echo "LLVM_IAS=1" >> $GITHUB_ENV
        echo "USE_CCACHE=0" >> $GITHUB_ENV

    - name: Add SUSFS to kernel tree
      run: |
        git clone --depth=1 https://github.com/abdulla-lin/susfs4ksu-module.git susfs_temp
        mkdir -p drivers/misc/susfs
        cp -r susfs_temp/* drivers/misc/susfs/
        rm -rf susfs_temp
        # Makefile & Kconfig for kernel integration
        echo 'obj-$(CONFIG_SUSFS) += susfs.o' > drivers/misc/susfs/Makefile
        echo 'config SUSFS
            tristate "Susfs support"
            default y
            help
              Susfs file system support.' > drivers/misc/susfs/Kconfig

    - name: Clone KernelSU module
      run: |
        git clone --depth=1 https://github.com/abdulla-lin/KernelSU.git kernelsu_temp
        mkdir -p drivers/misc/kernelsu
        cp -r kernelsu_temp/* drivers/misc/kernelsu/
        rm -rf kernelsu_temp
        # Makefile & Kconfig for KernelSU
        echo 'obj-$(CONFIG_KERNELSU) += kernelsu.o' > drivers/misc/kernelsu/Makefile
        echo 'config KERNELSU
            tristate "KernelSU support"
            default y
            help
              KernelSU root support.' > drivers/misc/kernelsu/Kconfig

    - name: Configure Kernel (ThinLTO + SUSFS + KernelSU + GSI & GPU userspace)
      run: |
        # create base defconfig (out/.config)
        make O=out gki_defconfig

        # Enable ThinLTO
        ./scripts/config --file out/.config \
          -e LTO_CLANG_THIN \
          -e THINLTO \
          -d LTO_NONE \
          -d LTO_CLANG_FULL

        # Enable SUSFS & KernelSU
        ./scripts/config --file out/.config -e SUSFS
        ./scripts/config --file out/.config -e KERNELSU

        # GSI & Android essentials (built-in where applicable)
        ./scripts/config --file out/.config -e ANDROID_BINDER_IPC || ./scripts/config --file out/.config -e ANDROID_BINDER
        ./scripts/config --file out/.config -e ANDROID_BINDERFS
        ./scripts/config --file out/.config -e ANDROID_ASHMEM

        # devtmpfs/sysfs/tmpfs
        ./scripts/config --file out/.config -e DEVTMPFS
        ./scripts/config --file out/.config -e DEVTMPFS_MOUNT
        ./scripts/config --file out/.config -e SYSFS
        ./scripts/config --file out/.config -e TMPFS
        ./scripts/config --file out/.config -e DEVPTS

        # namespaces & cgroups
        ./scripts/config --file out/.config -e NAMESPACES
        ./scripts/config --file out/.config -e USER_NS
        ./scripts/config --file out/.config -e CGROUPS
        ./scripts/config --file out/.config -e CGROUP_DEVICE
        ./scripts/config --file out/.config -e CGROUP_PIDS

        # filesystems and image helpers
        ./scripts/config --file out/.config -e EXT4_FS
        ./scripts/config --file out/.config -e F2FS_FS || true
        ./scripts/config --file out/.config -e BLK_DEV_LOOP
        ./scripts/config --file out/.config -e BLK_DEV_DM || true

        # security & debug
        ./scripts/config --file out/.config -e SECURITY_SELINUX
        ./scripts/config --file out/.config -e AUDIT
        ./scripts/config --file out/.config -e DEBUG_FS

        # devfreq + userspace governor for GPU control
        ./scripts/config --file out/.config -e DEVFREQ
        ./scripts/config --file out/.config -e DEVFREQ_GOV_USERSPACE || true

        # try enable Mali (if present) - harmless if symbol absent
        ./scripts/config --file out/.config -e MALI || true

        # set binder device names expected by Android userspace
        ./scripts/config --file out/.config --set-str ANDROID_BINDER_DEVICES "binder,hwbinder,vndbinder" || true

        # preserve your localversion settings
        ./scripts/config --file out/.config -d LOCALVERSION
        ./scripts/config --file out/.config -e LOCALVERSION_AUTO
        echo 'CONFIG_LOCALVERSION="-COMBACT-thinlto"' >> out/.config

        # update config
        make O=out olddefconfig

    - name: Build Kernel + DTB
      run: |
        make -j$(nproc) O=out CC=clang LLVM=1 LLVM_IAS=1
        make O=out dtbs CC=clang LLVM=1 LLVM_IAS=1

    - name: Prepare AnyKernel3
      run: |
        git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
        cp out/arch/arm64/boot/Image AnyKernel3/Image || true
        cp out/arch/arm64/boot/dts/**/*.dtb AnyKernel3/ || true
        if [ -f out/arch/arm64/boot/dtbo.img ]; then
          cp out/arch/arm64/boot/dtbo.img AnyKernel3/dtbo.img
        fi
        cp out/.config AnyKernel3/.config || true

    - name: Pack AnyKernel3 ZIP
      run: |
        cd AnyKernel3
        zip -r9 ../CMF_Kernel-6.1.68-COMBACT-thinlto-susfs-kernelsu.zip *

    - name: Upload AnyKernel3 ZIP
      uses: actions/upload-artifact@v4
      with:
        name: CMF_Kernel-6.1.68-COMBACT-thinlto-susfs-kernelsu
        path: CMF_Kernel-6.1.68-COMBACT-thinlto-susfs-kernelsu.zip
