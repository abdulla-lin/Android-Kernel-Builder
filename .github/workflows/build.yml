name: Build GKI Kernel 6.1

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest
    env:
      KERNEL_REPO: https://github.com/abdulla-lin/android_kernel_6.1_nothing_mt6878
      KERNEL_BRANCH: main

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          repository: ${{ env.KERNEL_REPO }}
          ref: ${{ env.KERNEL_BRANCH }}
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full android-sdk-libsparse-utils erofs-utils \
              default-jdk git gnupg flex bison gperf build-essential zip curl libc6-dev libncurses-dev libx11-dev libreadline-dev libgl1 libgl1-mesa-dev \
              python3 make sudo gcc g++ bc grep tofrodos python3-markdown libxml2-utils xsltproc zlib1g-dev python-is-python3 libc6-dev libtinfo6 \
              make repo cpio kmod openssl libelf-dev pahole libssl-dev libarchive-tools zstd --fix-missing
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
          sudo dpkg -i libtinfo5_6.3-2ubuntu0.1_amd64.deb

      - name: Setup Neutron-Clang Toolchain
        run: |
          mkdir -p $HOME/toolchains/neutron-clang
          cd $HOME/toolchains/neutron-clang
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
          chmod +x antman
          bash antman -S
          bash antman --patch=glibc

      - name: Set Environment Variables
        run: |
          echo "KERNEL_ROOT=$(pwd)" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "KBUILD_BUILD_USER=@ravindu644" >> $GITHUB_ENV
          echo "PATH=$HOME/toolchains/neutron-clang/bin:$PATH" >> $GITHUB_ENV
          echo "NEUTRON_PATH=$HOME/toolchains/neutron-clang/bin" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$HOME/toolchains/neutron-clang/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "BUILD_CC=$HOME/toolchains/neutron-clang/bin/clang" >> $GITHUB_ENV

      - name: Build Kernel
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kernel-build
          path: build/Image
