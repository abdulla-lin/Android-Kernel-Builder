name: Build MTK GKI Kernel (Neutron Clang + ARM GNU)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y wget tar lz4 cpio python3 flex bison bc kmod libssl-dev git zip unzip
        # ARM GNU toolchain
        mkdir -p ~/toolchains && cd ~/toolchains
        wget https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        tar -xf arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        # Neutron Clang
        wget https://github.com/Neutron-Clang/neutron-clang/releases/download/Neutron-19/Neutron-19.tar.zst
        tar --zstd -xf Neutron-19.tar.zst
        mv Neutron-19 clang

    - name: Configure defconfig
      run: |
        mkdir -p out
        make O=out ARCH=arm64 CC=clang CROSS_COMPILE=~/toolchains/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu- \
          CROSS_COMPILE_ARM32=~/toolchains/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin/arm-none-eabi- \
          LLVM=1 LLVM_IAS=1 gki_defconfig
        # Disable BTF (avoid pahole errors)
        scripts/config --file out/.config -d CONFIG_DEBUG_INFO_BTF
        yes "" | make O=out ARCH=arm64 olddefconfig

    - name: Build Kernel
      run: |
        make -j$(nproc) O=out \
          ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=~/toolchains/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu- \
          CROSS_COMPILE_ARM32=~/toolchains/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin/arm-none-eabi- \
          LLVM=1 LLVM_IAS=1

    - name: Collect artifacts
      run: |
        mkdir -p out/AnyKernel3
        cp out/arch/arm64/boot/Image out/
        gzip -c out/arch/arm64/boot/Image > out/Image.gz
        cp out/arch/arm64/boot/dts/*.dtb out/ || true
        cat out/arch/arm64/boot/dts/*.dtb > out/dtb.img || true

        # Prepare AnyKernel3
        git clone https://github.com/osm0sis/AnyKernel3 out/AnyKernel3
        cp out/Image.gz out/AnyKernel3/zImage
        cp out/dtb.img out/AnyKernel3/
        cd out/AnyKernel3 && zip -r9 ../AnyKernel3-MTK.zip *

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MTK-GKI-Kernel
        path: |
          out/Image
          out/Image.gz
          out/dtb.img
          out/AnyKernel3-MTK.zip
          
