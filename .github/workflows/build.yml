name: Build Kernel Modules Only

on:
  workflow_dispatch:

jobs:
  build_modules:
    runs-on: ubuntu-latest
    name: Build Kernel Modules

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v3
        with:
          repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
          ref: main
          submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git build-essential libelf-dev libncurses-dev clang lld python3 python-is-python3

      - name: Setup Neutron-Clang Toolchain
        run: |
          mkdir -p $HOME/toolchains/neutron-clang
          cd $HOME/toolchains/neutron-clang
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
          chmod +x antman
          bash antman -S

      - name: Set Environment Variables
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "KBUILD_BUILD_USER=github" >> $GITHUB_ENV
          echo "KBUILD_BUILD_HOST=actions" >> $GITHUB_ENV
          echo "PATH=$HOME/toolchains/neutron-clang/bin:$PATH" >> $GITHUB_ENV
          echo "LOCALVERSION=-NeutronClang" >> $GITHUB_ENV

      - name: Prepare Kernel Build Directory
        run: |
          # Assuming you have out/ from previous kernel build
          mkdir -p out modules_out

      - name: Build Modules
        run: |
          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out -j$(nproc) \
            CC=clang \
            LD=ld.lld \
            AR=llvm-ar \
            NM=llvm-nm \
            STRIP=llvm-strip \
            OBJCOPY=llvm-objcopy \
            OBJDUMP=llvm-objdump \
            READELF=llvm-readelf \
            HOSTCC=clang \
            HOSTCXX=clang++ \
            HOSTLD=ld.lld modules

          make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out INSTALL_MOD_PATH=$GITHUB_WORKSPACE/modules_out modules_install

      - name: Package Modules for AnyKernel3
        run: |
          mkdir -p AnyKernel3/modules/lib/modules
          cp -r modules_out/lib/modules/* AnyKernel3/modules/lib/modules/
          cd AnyKernel3 && zip -r9 ../Kernel-Modules.zip *

      - name: Upload Modules Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-modules
          path: Kernel-Modules.zip
          
