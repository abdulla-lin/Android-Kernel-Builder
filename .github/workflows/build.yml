name: Build MTK GKI Kernel Image (GCC 14.2, BTF Disabled)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Kernel Image

    env:
      ARCH: arm64
      LOCALVERSION: -MTK-GCC14
      KBUILD_BUILD_USER: github
      KBUILD_BUILD_HOST: actions
      KBUILD_IGNORE_BTF: 1

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v3
      with:
        repository: abdulla-lin/android_kernel_6.1_nothing_mt6878
        ref: main
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git bc flex bison libncurses-dev \
          libelf-dev zlib1g-dev python3 python-is-python3 wget curl p7zip-full \
          device-tree-compiler libtinfo6 cpio kmod zip

    - name: Setup GCC 14.2 Toolchain
      run: |
        mkdir -p $HOME/toolchains/gcc14
        cd $HOME/toolchains/gcc14
        curl -LO https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        tar -xf arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        echo "$HOME/toolchains/gcc14/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin" >> $GITHUB_PATH
        cd $GITHUB_WORKSPACE

    - name: (Optional) Setup Neutron-Clang Toolchain
      run: |
        mkdir -p $HOME/toolchains/neutron-clang
        cd $HOME/toolchains/neutron-clang
        curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
        chmod +x antman
        bash antman -S --skip-deps
        cd $GITHUB_WORKSPACE

    - name: Configure Kernel (Disable BTF)
      run: |
        mkdir -p out build
        make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out gki_defconfig
        # Disable BTF to prevent pahole errors
        scripts/config --file out/.config -d CONFIG_DEBUG_INFO_BTF
        make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out olddefconfig

    - name: Build Kernel Image
      run: |
        export CROSS_COMPILE=$HOME/toolchains/gcc14/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
        make -C $GITHUB_WORKSPACE O=$GITHUB_WORKSPACE/out \
          Image \
          CC=$HOME/toolchains/neutron-clang/bin/clang \
          AR=$HOME/toolchains/neutron-clang/bin/llvm-ar \
          NM=$HOME/toolchains/neutron-clang/bin/llvm-nm \
          LD=$HOME/toolchains/neutron-clang/bin/ld.lld \
          STRIP=$HOME/toolchains/neutron-clang/bin/llvm-strip \
          OBJCOPY=$HOME/toolchains/neutron-clang/bin/llvm-objcopy \
          OBJDUMP=$HOME/toolchains/neutron-clang/bin/llvm-objdump \
          READELF=$HOME/toolchains/neutron-clang/bin/llvm-readelf \
          HOSTCC=$HOME/toolchains/neutron-clang/bin/clang \
          HOSTCXX=$HOME/toolchains/neutron-clang/bin/clang++ \
          KBUILD_IGNORE_BTF=1 \
          -j$(nproc)
        cp $GITHUB_WORKSPACE/out/arch/arm64/boot/Image $GITHUB_WORKSPACE/build/

    - name: Upload Kernel Image
      uses: actions/upload-artifact@v4
      with:
        name: kernel-image
        path: build/Image
        
