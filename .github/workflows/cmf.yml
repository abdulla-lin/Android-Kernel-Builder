name: Build Nothing Tetris Kernel (Kleaf)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # -----------------------------
      # 1Ô∏è‚É£ Checkout workflow repo
      # -----------------------------
      - name: Checkout workflow
        uses: actions/checkout@v4

      # -----------------------------
      # 2Ô∏è‚É£ Install dependencies
      # -----------------------------
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison build-essential cpio curl flex git libssl-dev \
            libncurses5-dev zlib1g-dev libelf-dev dwarves \
            wget unzip xz-utils tar clang lld llvm binutils \
            python3 python3-pip openjdk-11-jdk zip

      # -----------------------------
      # 3Ô∏è‚É£ Cache kernel source
      # -----------------------------
      - name: Cache kernel source
        uses: actions/cache@v3
        with:
          path: kernel_build/kernel_source
          key: kernel_source-${{ github.sha }}

      # -----------------------------
      # 4Ô∏è‚É£ Clone kernel source if not cached
      # -----------------------------
      - name: Clone kernel source
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p kernel_build
          git clone --depth=1 --branch mt6878/Tetris/v https://github.com/abdulla-lin/android_kernel_6.1_nothing_mt6878.git kernel_build/kernel_source

      # -----------------------------
      # 5Ô∏è‚É£ Cache device modules
      # -----------------------------
      - name: Cache device modules
        uses: actions/cache@v3
        with:
          path: kernel_build/kernel_device_modules-6.1
          key: device_modules-${{ github.sha }}

      # -----------------------------
      # 6Ô∏è‚É£ Clone device modules if not cached
      # -----------------------------
      - name: Clone device modules (correct path)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_device_modules_6.1_nothing_mt6878.git kernel_build/kernel_device_modules-6.1

      # -----------------------------
      # 7Ô∏è‚É£ Cache vendor modules
      # -----------------------------
      - name: Cache vendor modules
        uses: actions/cache@v3
        with:
          path: kernel_build/vendor/mediatek/kernel_modules
          key: vendor_modules-${{ github.sha }}

      # -----------------------------
      # 8Ô∏è‚É£ Clone vendor modules if not cached
      # -----------------------------
      - name: Clone vendor modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_modules_nothing_mt6878.git kernel_build/vendor/mediatek/kernel_modules

      # -----------------------------
      # 9Ô∏è‚É£ Cache Kleaf
      # -----------------------------
      - name: Cache Kleaf
        uses: actions/cache@v3
        with:
          path: kernel_build/build/bazel_mgk_rules
          key: kleaf-${{ github.sha }}

      # -----------------------------
      # üîü Clone Kleaf if not cached
      # -----------------------------
      - name: Clone Kleaf
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone --depth=1 https://github.com/abdulla-lin/kernel-build-bazel_mgk_rules.git kernel_build/build/bazel_mgk_rules

      # -----------------------------
      # 1Ô∏è‚É£1Ô∏è‚É£ Setup Kleaf safely
      # -----------------------------
      - name: Setup Kleaf
        run: |
          if [ -f kernel_build/build/bazel_mgk_rules/BUILD.bazel ]; then
            cp kernel_build/build/bazel_mgk_rules/BUILD.bazel kernel_build/kernel_device_modules-6.1/BUILD.bazel
          else
            echo "‚ö†Ô∏è BUILD.bazel not found, skipping..."
          fi

          if [ -f kernel_build/build/bazel_mgk_rules/WORKSPACE ]; then
            cp kernel_build/build/bazel_mgk_rules/WORKSPACE kernel_build/kernel_device_modules-6.1/WORKSPACE
          else
            echo "‚ö†Ô∏è WORKSPACE not found, skipping..."
          fi

          mkdir -p kernel_build/build/kernel/tools
          if [ -f kernel_build/build/bazel_mgk_rules/bazel.sh ]; then
            cp kernel_build/build/bazel_mgk_rules/bazel.sh kernel_build/build/kernel/tools/bazel
          else
            echo "‚ö†Ô∏è bazel.sh not found, skipping..."
          fi

      # -----------------------------
      # 1Ô∏è‚É£2Ô∏è‚É£ Ensure build.config exists
      # -----------------------------
      - name: Ensure build.config
        run: |
          cd kernel_build/kernel_device_modules-6.1
          if [ ! -f build.config ]; then
            cp build.config.mtk_kernel_device_modules build.config
          fi

      # -----------------------------
      # 1Ô∏è‚É£3Ô∏è‚É£ Build kernel (Kleaf)
      # -----------------------------
      - name: Build kernel
        run: |
          cd kernel_build/kernel_device_modules-6.1
          DEVICE_MODULES_DIR=. bash build.sh

      # -----------------------------
      # 1Ô∏è‚É£4Ô∏è‚É£ Collect artifacts
      # -----------------------------
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp kernel_build/out/android14-6.1/dist/Image* artifacts/ || true
          cp kernel_build/out/android14-6.1/dist/*.img artifacts/ || true
          cp -r kernel_build/out/android14-6.1/dist/modules artifacts/ || true
          cd artifacts && zip -r ../kernel_artifacts.zip *

      # -----------------------------
      # 1Ô∏è‚É£5Ô∏è‚É£ Upload kernel artifacts
      # -----------------------------
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_artifacts
          path: kernel_artifacts.zip

      # -----------------------------
      # 1Ô∏è‚É£6Ô∏è‚É£ Prepare AnyKernel3 flashable ZIP
      # -----------------------------
      - name: Prepare AnyKernel3
        run: |
          git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
          cp kernel_build/out/android14-6.1/dist/Image* AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/dtbo.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/vendor_dlkm.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/system_dlkm.img AnyKernel3/ || true

      # -----------------------------
      # 1Ô∏è‚É£7Ô∏è‚É£ Pack AnyKernel3 flashable ZIP
      # -----------------------------
      - name: Pack AnyKernel3 flashable ZIP
        run: |
          cd AnyKernel3
          zip -r9 ../CMF_Kernel-6.1-$(date +%Y%m%d-%H%M%S).zip *

      # -----------------------------
      # 1Ô∏è‚É£8Ô∏è‚É£ Upload AnyKernel3 ZIP
      # -----------------------------
      - name: Upload AnyKernel3 flashable ZIP
        uses: actions/upload-artifact@v4
        with:
          name: CMF_Kernel-Flashable-ZIP
          path: CMF_Kernel-6.1-*.zip
