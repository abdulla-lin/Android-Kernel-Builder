name: Build CMF Kernel with Kleaf

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kernel Source
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison build-essential cpio curl flex git libssl-dev \
            libncurses5-dev zlib1g-dev libelf-dev dwarves \
            wget unzip xz-utils tar clang lld llvm binutils \
            python3 python3-pip openjdk-11-jdk realpath

      - name: Install Repo Tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod +x ~/repo
          sudo mv ~/repo /usr/local/bin/

      - name: Initialize Repo
        run: |
          mkdir -p kernel_build
          cd kernel_build
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android14-6.1

      - name: Sync Repo
        run: |
          cd kernel_build
          repo sync -j$(nproc) --force-sync

      - name: Clone Device Modules
        run: |
          git clone --depth=1 -b v1-u https://gitlab.e.foundation/e/devices/android_kernel_nothing_tetris-device_modules.git kernel_build/kernel_device_modules-6.1

      - name: Create build.config for Device Modules
        run: |
          cat > kernel_build/kernel_device_modules-6.1/build.config <<'EOF'
          DEVICE=mt6878
          KERNEL_VERSION=6.1
          ROOT_DIR=$(pwd)
          DEVICE_MODULES_DIR=.
          OUT_DIR=$ROOT_DIR/out/android14-6.1
          EOF

      - name: Build Kernel with Kleaf
        run: |
          cd kernel_build/kernel_device_modules-6.1
          ./build.sh

      - name: Collect Raw Kernel Artifacts
        run: |
          mkdir -p artifacts
          cp kernel_build/out/android14-6.1/dist/Image* artifacts/ || true
          cp kernel_build/out/android14-6.1/dist/*.img artifacts/ || true
          cp -r kernel_build/out/android14-6.1/dist/modules artifacts/ || true
          cd artifacts && zip -r ../kernel_artifacts.zip *

      - name: Upload Raw Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_artifacts
          path: kernel_artifacts.zip

      - name: Prepare AnyKernel3
        run: |
          git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
          cp kernel_build/out/android14-6.1/dist/Image* AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/dtbo.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/vendor_dlkm.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/system_dlkm.img AnyKernel3/ || true

      - name: Pack AnyKernel3 Flashable ZIP
        run: |
          cd AnyKernel3
          zip -r9 ../CMF_Kernel-6.1-$(date +%Y%m%d).zip *

      - name: Upload AnyKernel3 Flashable ZIP
        uses: actions/upload-artifact@v4
        with:
          name: CMF_Kernel-Flashable-ZIP
          path: CMF_Kernel-6.1-*.zip
