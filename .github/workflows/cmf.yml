name: Build fenrir (tetris) with pre-check

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: abdulla-lin/fenrir
          ref: main

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential wget python3 unzip binutils

      - name: Download lk.img -> bin/tetris.bin
        run: |
          mkdir -p bin payload/devices artifacts
          FILEID="1ZuX0hBB9fSZ7I7tDj3l0n1qrM1-KzUa1"
          CONFIRM=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate \
            "https://drive.google.com/uc?export=download&id=${FILEID}" -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1/p')
          wget --load-cookies /tmp/cookies.txt \
            "https://drive.google.com/uc?export=download&confirm=${CONFIRM}&id=${FILEID}" \
            -O bin/tetris.bin
          ls -lh bin/tetris.bin

      - name: Pre-check:ensure STAGE1_BASE is inside bl2_ext range
        run: |
         JSON_BASE=$(python3 -c "import json; j=json.load(open('payload/devices/tetris.json')); print(j['bl2_ext_base'])")
         JSON_SIZE=$(python3 -c "import json; j=json.load(open('payload/devices/tetris.json')); s=int(j['bl2_ext_size'],0) if isinstance(j['bl2_ext_size'],str) else j['bl2_ext_size']; print(hex(s))")
         echo "Config base=$JSON_BASE size=$JSON_SIZE"

          if [ -f "payload/devices/tetris.h" ]; then
            HFILE="payload/devices/tetris.h"
          elif [ -f "payload/tetris.h" ]; then
            HFILE="payload/tetris.h"
          else
            echo "ERROR: cannot find tetris.h - aborting"
            exit 1
          fi

          echo "Using header: $HFILE"
          STAGE1=$(awk '/#define STAGE1_BASE/ {print $3; exit}' $HFILE)
          echo "STAGE1_BASE = $STAGE1"

          base_dec=$((JSON_BASE))
          size_dec=$((JSON_SIZE))
          start=$((base_dec))
          end=$((base_dec + size_dec - 1))
          stg1=$((STAGE1))

          printf "Computed range: 0x%X - 0x%X\n" $start $end
          printf "STAGE1_BASE: 0x%X\n" $stg1

          if (( stg1 >= start && stg1 <= end )); then
            echo "OK: STAGE1_BASE is inside bl2_ext range â€” proceeding to build."
          else
            echo "FAIL: STAGE1_BASE NOT inside bl2_ext range. Aborting build."
            exit 1
          fi

      - name: Build fenrir for tetris
        run: |
          chmod +x build.sh
          ./build.sh tetris

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp -av out/* artifacts/ || true
          cp -av build/tetris/stage3/payload.elf artifacts/ || true
          cp -av payload/devices/tetris.json artifacts/ || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fenrir-tetris-artifacts
          path: artifacts/**
          
