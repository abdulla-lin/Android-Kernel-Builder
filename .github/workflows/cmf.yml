name: Build Nothing Tetris Kernel (Kleaf)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout workflow repo
      - name: Checkout workflow
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison build-essential cpio curl flex git libssl-dev \
            libncurses5-dev zlib1g-dev libelf-dev dwarves \
            wget unzip xz-utils tar clang lld llvm binutils \
            python3 python3-pip openjdk-11-jdk zip

      # 3Ô∏è‚É£ Add swap to avoid OOM
      - name: Add extra swap
        run: |
          sudo fallocate -l 6G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      # 4Ô∏è‚É£ Clone kernel source
      - name: Clone kernel source
        run: |
          mkdir -p kernel_build
          git clone --depth=1 -b Tetris-2 https://github.com/abdulla-lin/android_kernel_6.1_nothing_mt6878.git kernel_build/kernel-6.1

      # 5Ô∏è‚É£ Clone kernel device modules
      - name: Clone device modules
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_device_modules_6.1_nothing_mt6878.git kernel_build/kernel_device_modules-6.1

      # 6Ô∏è‚É£ Clone vendor kernel modules
      - name: Clone vendor kernel modules
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_modules_nothing_mt6878.git kernel_build/vendor/mediatek/kernel_modules

      # 7Ô∏è‚É£ Fix build.config paths
      - name: Fix build.config paths
        run: |
          cd kernel_build/kernel_device_modules-6.1
          cp build.config.mtk_kernel_device_modules build.config
          mkdir -p kernel_device_modules-6.1
          cp build.config.mtk_kernel_device_modules kernel_device_modules-6.1/build.config.mtk.aarch64.mgk
          echo "‚úÖ build.config fixed"

      # 8Ô∏è‚É£ Build device modules (system_dlkm + vendor_dlkm)
      - name: Build device modules
        run: |
          cd kernel_build/kernel_device_modules-6.1
          export MAKEFLAGS="-j2"
          export CLANG_MAX_JOBS=2
          export BAZEL_BUILD_OPTS="--jobs=2 --local_ram_resources=2048 --local_cpu_resources=2"
          tools/bazel clean --expunge || true
          tools/bazel build //common:system_dlkm_dist $BAZEL_BUILD_OPTS
          tools/bazel build //common:vendor_dlkm_dist $BAZEL_BUILD_OPTS

      # 9Ô∏è‚É£ Build kernel
      - name: Build kernel
        run: |
          cd kernel_build/kernel_device_modules-6.1
          export MAKEFLAGS="-j2"
          export CLANG_MAX_JOBS=2
          export BAZEL_BUILD_OPTS="--jobs=2 --local_ram_resources=2048 --local_cpu_resources=2"
          tools/bazel build //common:kernel_dist $BAZEL_BUILD_OPTS

      # üîü Collect artifacts
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp kernel_build/out/android14-6.1/dist/Image* artifacts/ || true
          cp kernel_build/out/android14-6.1/dist/*.img artifacts/ || true
          cp -r kernel_build/out/android14-6.1/dist/modules artifacts/ || true
          cd artifacts && zip -r ../kernel_artifacts.zip *

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload kernel artifacts
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_artifacts
          path: kernel_artifacts.zip

      # 1Ô∏è‚É£2Ô∏è‚É£ Prepare AnyKernel3 ZIP
      - name: Prepare AnyKernel3
        run: |
          git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
          cp kernel_build/out/android14-6.1/dist/Image* AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/dtbo.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/vendor_dlkm.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/system_dlkm.img AnyKernel3/ || true

      # 1Ô∏è‚É£3Ô∏è‚É£ Pack AnyKernel3 flashable ZIP
      - name: Pack AnyKernel3 flashable ZIP
        run: |
          cd AnyKernel3
          zip -r9 ../CMF_Kernel-6.1-$(date +%Y%m%d-%H%M%S).zip *

      # 1Ô∏è‚É£4Ô∏è‚É£ Upload AnyKernel3 ZIP
      - name: Upload AnyKernel3 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: CMF_Kernel-Flashable-ZIP
          path: CMF_Kernel-6.1-*.zip
