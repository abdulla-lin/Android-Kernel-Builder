name: Build Nothing Tetris Kernel (Non-Root)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    env:
      # Paths to local tools in your home directory
      JAVA_HOME: ${{ github.workspace }}/tools/jdk
      PATH: ${{ github.workspace }}/tools/jdk/bin:${{ github.workspace }}/tools/python/bin:$PATH

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout workflow
        uses: actions/checkout@v4

      # 2️⃣ Setup JDK (user-space)
      - name: Setup Java
        run: |
          mkdir -p $HOME/tools/jdk
          if [ ! -d "$HOME/tools/jdk/bin" ]; then
            curl -L -o openjdk.tar.gz https://download.java.net/java/GA/jdk11/13/GPL/openjdk-11.0.20_linux-x64_bin.tar.gz
            tar -xzf openjdk.tar.gz -C $HOME/tools/jdk --strip-components=1
          fi
          java -version

      # 3️⃣ Setup Python (user-space)
      - name: Setup Python
        run: |
          mkdir -p $HOME/tools/python
          if [ ! -d "$HOME/tools/python/bin" ]; then
            curl -L -o python.tar.xz https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz
            tar -xzf python.tar.xz -C $HOME/tools/python --strip-components=1
          fi
          python3 --version
          pip3 install --user --upgrade pip

      # 4️⃣ Clone kernel source
      - name: Clone kernel source
        run: |
          mkdir -p kernel_build
          git clone --depth=1 -b Tetris-2 https://github.com/abdulla-lin/android_kernel_6.1_nothing_mt6878.git kernel_build/kernel-6.1

      # 5️⃣ Clone device modules
      - name: Clone device modules
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_device_modules_6.1_nothing_mt6878.git kernel_build/kernel_device_modules-6.1

      # 6️⃣ Fix build.config paths
      - name: Fix build.config
        run: |
          cd kernel_build/kernel_device_modules-6.1
          cp build.config.mtk_kernel_device_modules build.config
          mkdir -p kernel_device_modules-6.1
          cp build.config.mtk_kernel_device_modules kernel_device_modules-6.1/build.config.mtk.aarch64.mgk

      # 7️⃣ Build kernel (user-space)
      - name: Build kernel
        run: |
          cd kernel_build/kernel_device_modules-6.1
          export MAKEFLAGS="-j2"
          export CLANG_MAX_JOBS=2
          bash build.sh

      # 8️⃣ Collect artifacts
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp kernel_build/out/android14-6.1/dist/Image* artifacts/ || true
          cp kernel_build/out/android14-6.1/dist/*.img artifacts/ || true
          cp -r kernel_build/out/android14-6.1/dist/modules artifacts/ || true
          cd artifacts && zip -r ../kernel_artifacts.zip *

      # 9️⃣ Upload kernel artifacts
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_artifacts
          path: kernel_artifacts.zip
