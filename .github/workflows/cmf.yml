name: Build Nothing Tetris Kernel (Kleaf)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # -----------------------------
      # 1Ô∏è‚É£ Checkout workflow repo
      # -----------------------------
      - name: Checkout workflow
        uses: actions/checkout@v4

      # -----------------------------
      # 2Ô∏è‚É£ Install dependencies
      # -----------------------------
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison build-essential cpio curl flex git libssl-dev \
            libncurses5-dev zlib1g-dev libelf-dev dwarves \
            wget unzip xz-utils tar clang lld llvm binutils \
            python3 python3-pip openjdk-11-jdk zip

      # -----------------------------
      # 3Ô∏è‚É£ Install repo tool
      # -----------------------------
      - name: Install repo
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod +x ~/repo
          sudo mv ~/repo /usr/local/bin/

      # -----------------------------
      # 4Ô∏è‚É£ Create kernel build dir and local manifest
      # -----------------------------
      - name: Setup repo and local manifest
        run: |
          mkdir -p kernel_build/.repo/local_manifests
          cat > kernel_build/.repo/local_manifests/local_manifest.xml <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <manifest>
          <remote fetch="https://github.com" name="github"/>

          <!-- Remove unused Android Common Kernel projects -->
          <remove-project name="kernel/common"/>
          <remove-project name="kernel/common-modules/virtual-device"/>

          <!-- Track MediaTek Generic Kernel bazel rules -->
          <remove-project name="kernel/build"/>
          <project path="build/kernel" name="kernel/build" >
          <linkfile src="kleaf/bazel.sh" dest="tools/bazel" />
          <linkfile src="build_test.sh" dest="build/build_test.sh" />
          <linkfile src="config.sh" dest="build/config.sh" />
          </project>
          <project remote="github" name="Mashopy/kernel-build-bazel_mgk_rules" path="build/bazel_mgk_rules" revision="android-14-release-u3uc34.63-31-6">
          <linkfile src="BUILD.bazel" dest="BUILD" />           <linkfile src="kleaf/bazel.WORKSPACE" dest="WORKSPACE" />
          </project>

          <!-- Track MediaTek Generic Kernel projects -->
          <project remote="github" name="NothingOSS/android_kernel_6.1_nothing_mt6878" path="kernel-6.1" revision="mt6878/Tetris/u">
          <linkfile src="build.config.constants" dest="build.config.constants" />
          </project>
          <project remote="github" name="Mashopy/android_kernel_device_modules_6.1_nothing_mt6878" path="kernel_device_modules-6.1" revision="mt6878/Tetris/u">
          <linkfile src="build.config.mtk_kernel_device_modules" dest="build.config" />
          </project>
          <project remote="github" name="NothingOSS/android_kernel_modules_nothing_mt6878" path="vendor/mediatek/kernel_modules" revision="mt6878/Tetris/u"/>
          </manifest>
          EOF

      # -----------------------------
      # 5Ô∏è‚É£ Initialize repo
      # -----------------------------
      - name: Init repo
        run: |
          cd kernel_build
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android14-6.1

      # -----------------------------
      # 6Ô∏è‚É£ Sync all repos
      # -----------------------------
      - name: Repo sync
        run: |
         cd kernel_build
         NUM_CORES=$(nproc)
         repo sync -c -j$NUM_CORES --fail-fast --force-sync --no-clone-bundle --no-tags
      # -----------------------------
      # 7Ô∏è‚É£ Build kernel_device_modules-6.1
      # -----------------------------
      - name: Build kernel
        run: |
          cd kernel_build/kernel_device_modules-6.1
          bash build.sh

      # -----------------------------
      # 8Ô∏è‚É£ Collect kernel artifacts
      # -----------------------------
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp kernel_build/out/android14-6.1/dist/Image* artifacts/ || true
          cp kernel_build/out/android14-6.1/dist/*.img artifacts/ || true
          cp -r kernel_build/out/android14-6.1/dist/modules artifacts/ || true
          cd artifacts && zip -r ../kernel_artifacts.zip *

      # -----------------------------
      # 9Ô∏è‚É£ Upload kernel artifacts
      # -----------------------------
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_artifacts
          path: kernel_artifacts.zip

      # -----------------------------
      # üîü Prepare AnyKernel3 flashable ZIP
      # -----------------------------
      - name: Prepare AnyKernel3
        run: |
          git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
          cp kernel_build/out/android14-6.1/dist/Image* AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/dtbo.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/vendor_dlkm.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/system_dlkm.img AnyKernel3/ || true

      # -----------------------------
      # 1Ô∏è‚É£1Ô∏è‚É£ Pack AnyKernel3 ZIP
      # -----------------------------
      - name: Pack AnyKernel3 flashable ZIP
        run: |
          cd AnyKernel3
          zip -r9 ../CMF_Kernel-6.1-$(date +%Y%m%d-%H%M%S).zip *

      # -----------------------------
      # 1Ô∏è‚É£2Ô∏è‚É£ Upload AnyKernel3 flashable ZIP
      # -----------------------------
      - name: Upload AnyKernel3 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: CMF_Kernel-Flashable-ZIP
          path: CMF_Kernel-6.1-*.zip
