name: Build Nothing Tetris Kernel (Kleaf)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, serverhive]

    steps:
      # 1Ô∏è‚É£ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup user-space tools (tar, unzip, xz, wget, curl)
      - name: Setup user-space tools
        run: |
          mkdir -p $HOME/tools/bin
          export PATH=$HOME/tools/bin:$PATH

          # Check tar
          if ! command -v tar &> /dev/null; then
            echo "Installing GNU tar in user-space..."
            wget https://ftp.gnu.org/gnu/tar/tar-latest.tar.gz -O $HOME/tools/tar.tar.gz
            mkdir -p $HOME/tools/tar_build
            tar -xf $HOME/tools/tar.tar.gz -C $HOME/tools/tar_build --strip-components=1
            cd $HOME/tools/tar_build
            ./configure --prefix=$HOME/tools
            make
            make install
          fi

          # Minimal check for unzip
          if ! command -v unzip &> /dev/null; then
            sudo apt-get install unzip -y || echo "No sudo, please pre-install manually"
          fi

          echo "PATH=$PATH"

      # 3Ô∏è‚É£ Install Java and Python in user-space (optional if not installed)
      - name: Verify Java/Python
        run: |
          java -version || echo "Please install OpenJDK 11 in user-space"
          python3 --version || echo "Please install Python3"

      # 4Ô∏è‚É£ Clone kernel source
      - name: Clone kernel source
        run: |
          mkdir -p kernel_build
          git clone --depth=1 -b Tetris-2 https://github.com/abdulla-lin/android_kernel_6.1_nothing_mt6878.git kernel_build/kernel-6.1

      # 5Ô∏è‚É£ Clone device modules
      - name: Clone device modules
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_device_modules_6.1_nothing_mt6878.git kernel_build/kernel_device_modules-6.1

      # 6Ô∏è‚É£ Clone vendor kernel modules
      - name: Clone vendor kernel modules
        run: |
          git clone --depth=1 -b mt6878/Tetris/u https://github.com/abdulla-lin/android_kernel_modules_nothing_mt6878.git kernel_build/vendor/mediatek/kernel_modules

      # 7Ô∏è‚É£ Fix build.config paths
      - name: Fix build.config paths
        run: |
          cd kernel_build/kernel_device_modules-6.1
          cp build.config.mtk_kernel_device_modules build.config
          mkdir -p kernel_device_modules-6.1
          cp build.config.mtk_kernel_device_modules kernel_device_modules-6.1/build.config.mtk.aarch64.mgk

      # 8Ô∏è‚É£ Build kernel
      - name: Build kernel
        run: |
          cd kernel_build/kernel_device_modules-6.1
          export MAKEFLAGS="-j2"
          export CLANG_MAX_JOBS=2
          bash build.sh

      # 9Ô∏è‚É£ Collect artifacts
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp kernel_build/out/android14-6.1/dist/Image* artifacts/ || true
          cp kernel_build/out/android14-6.1/dist/*.img artifacts/ || true
          cp -r kernel_build/out/android14-6.1/dist/modules artifacts/ || true
          cd artifacts && zip -r ../kernel_artifacts.zip *

      # üîü Upload kernel artifacts
      - name: Upload kernel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel_artifacts
          path: kernel_artifacts.zip

      # 1Ô∏è‚É£1Ô∏è‚É£ Prepare AnyKernel3 ZIP
      - name: Prepare AnyKernel3
        run: |
          git clone --depth=1 https://github.com/WildPlusKernel/AnyKernel3.git AnyKernel3
          cp kernel_build/out/android14-6.1/dist/Image* AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/dtbo.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/vendor_dlkm.img AnyKernel3/ || true
          cp kernel_build/out/android14-6.1/dist/system_dlkm.img AnyKernel3/ || true

      # 1Ô∏è‚É£2Ô∏è‚É£ Pack AnyKernel3 ZIP
      - name: Pack AnyKernel3 flashable ZIP
        run: |
          cd AnyKernel3
          zip -r9 ../CMF_Kernel-6.1-$(date +%Y%m%d-%H%M%S).zip *

      # 1Ô∏è‚É£3Ô∏è‚É£ Upload AnyKernel3 ZIP
      - name: Upload AnyKernel3 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: CMF_Kernel-Flashable-ZIP
          path: CMF_Kernel-6.1-*.zip
